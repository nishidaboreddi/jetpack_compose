
package com.example.composetest





import android.graphics.Paint
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.background
import android.os.Bundle
import androidx. compose. material3.Surface
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.ColumnScope
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.text.selection.DisableSelection
import androidx.compose.foundation.text.selection.SelectionContainer
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.stringResource
import androidx.compose.ui.text.ParagraphStyle
import androidx.compose.ui.text.SpanStyle
import androidx.compose.ui.text.buildAnnotatedString
import androidx.compose.ui.text.font.FontStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.BaselineShift
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.text.style.TextOverflow
import androidx.compose.ui.text.withStyle
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.myapplication.R
import com.example.myapplication.ui.theme.MyApplicationTheme


class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplicationTheme {
                Surface(color= MaterialTheme.colorScheme.background)
                {Column(modifier=Modifier.fillMaxSize())
                {
                    SuperScript("Hello","World!")
                    SubScript("Hello","World!")
                }

                }
            }
        }
    }
}
@Composable
fun SuperScript( normalText:String,
                 superText:String){
    Text(buildAnnotatedString {
        withStyle(
            style=SpanStyle(
                fontSize =MaterialTheme.typography.titleLarge.fontSize,
                fontWeight=FontWeight.Bold,
                color=Color.Cyan
            )
        ){
            append(normalText)
        }
        withStyle(
            style=SpanStyle(
                fontSize =MaterialTheme.typography.labelSmall.fontSize,
                fontWeight=FontWeight.Normal,
                baselineShift = BaselineShift.Superscript,
                color=Color.Green
            )
        ){
            append(superText)
        }
    })


}

@Composable
fun SubScript(normalText: String,subText:String){
    Text(buildAnnotatedString {
        withStyle(style=SpanStyle(
            fontSize = MaterialTheme.typography.titleLarge.fontSize,
            fontWeight=FontWeight.Bold,
            color=Color.Blue
        ))
        {
            append(normalText)
        }
        withStyle(style=SpanStyle(
            fontSize =MaterialTheme.typography.labelSmall.fontSize,
            fontWeight=FontWeight.Normal,
            baselineShift = BaselineShift.Subscript,
            color=Color.Red
        ))
        {
            append(subText)
        }
    })

}

@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    MyApplicationTheme{
        Column(modifier=Modifier.fillMaxSize())
        {
            SuperScript("Hello","World!")
            SubScript("Hello","World!")
        }
    }
}
